[{"C:\\Users\\vikas\\Desktop\\react.js\\bar_chart_with_signup\\src\\index.js":"1","C:\\Users\\vikas\\Desktop\\react.js\\bar_chart_with_signup\\src\\App.js":"2","C:\\Users\\vikas\\Desktop\\react.js\\bar_chart_with_signup\\src\\Home.js":"3","C:\\Users\\vikas\\Desktop\\react.js\\bar_chart_with_signup\\src\\Dashboard.js":"4","C:\\Users\\vikas\\Desktop\\react.js\\bar_chart_with_signup\\src\\Form.js":"5","C:\\Users\\vikas\\Desktop\\react.js\\bar_chart_with_signup\\src\\BackgroundImage.js":"6"},{"size":318,"mtime":1652885860195,"results":"7","hashOfConfig":"8"},{"size":353,"mtime":1652886325803,"results":"9","hashOfConfig":"8"},{"size":265,"mtime":1652881639228,"results":"10","hashOfConfig":"8"},{"size":4480,"mtime":1652955420016,"results":"11","hashOfConfig":"8"},{"size":3397,"mtime":1652955709129,"results":"12","hashOfConfig":"8"},{"size":509,"mtime":1652617441257,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ytukn9",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vikas\\Desktop\\react.js\\bar_chart_with_signup\\src\\index.js",[],[],"C:\\Users\\vikas\\Desktop\\react.js\\bar_chart_with_signup\\src\\App.js",[],[],"C:\\Users\\vikas\\Desktop\\react.js\\bar_chart_with_signup\\src\\Home.js",[],[],"C:\\Users\\vikas\\Desktop\\react.js\\bar_chart_with_signup\\src\\Dashboard.js",["33"],[],"import React, { Component }  from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.drawChart();\r\n  }\r\n  \r\n  drawChart() {\r\n    const sample = [\r\n      {\r\n        language: 'Rust',\r\n        value: Math.floor(Math.random() * 100) + 1 ,\r\n        color: '#000000'\r\n      },\r\n      {\r\n        language: 'Kotlin',\r\n        value: Math.floor(Math.random() * 100) + 1,\r\n        color: '#00a2ee'\r\n      },\r\n      {\r\n        language: 'Python',\r\n        value: Math.floor(Math.random() * 100) + 1,\r\n        color: '#fbcb39'\r\n      },\r\n      {\r\n        language: 'TypeScript',\r\n        value: Math.floor(Math.random() * 100) + 1,\r\n        color: '#007bc8'\r\n      },\r\n      {\r\n        language: 'Go',\r\n        value: Math.floor(Math.random() * 100) + 1,\r\n        color: '#65cedb'\r\n      },\r\n      {\r\n        language: 'Swift',\r\n        value: Math.floor(Math.random() * 100) + 1,\r\n        color: '#ff6e52'\r\n      },\r\n      {\r\n        language: 'JavaScript',\r\n        value: Math.floor(Math.random() * 100) + 1,\r\n        color: '#f9de3f'\r\n      },\r\n      {\r\n        language: 'C#',\r\n        value: Math.floor(Math.random() * 100) + 1,\r\n        color: '#5d2f8e'\r\n      },\r\n      {\r\n        language: 'F#',\r\n        value: Math.floor(Math.random() * 100) + 1,\r\n        color: '#008fc9'\r\n      },\r\n      {\r\n        language: 'Clojure',\r\n        value: Math.floor(Math.random() * 100) + 1,\r\n        color: '#507dca'\r\n      }\r\n    ];\r\n\r\n    const svg = d3.select('svg');\r\n    const svgContainer = d3.select('#container');\r\n    \r\n    const margin = 80;\r\n    const width = 700 - 2 * margin;\r\n    const height = 500 - 2 * margin;\r\n\r\n    const chart = svg.append('g')\r\n      .attr('transform', `translate(${margin}, ${margin})`);\r\n\r\n    const xScale = d3.scaleBand()\r\n      .range([0, width])\r\n      .domain(sample.map((s) => s.language))\r\n      .padding(0.3)\r\n    \r\n    const yScale = d3.scaleLinear()\r\n      .range([height, 0])\r\n      .domain([0, 100]);\r\n\r\n    // vertical grid lines\r\n    const makeXLines = () => d3.axisBottom()\r\n      .scale(xScale)\r\n\r\n    const makeYLines = () => d3.axisLeft()\r\n      .scale(yScale)\r\n\r\n    chart.append('g')\r\n      .attr('transform', `translate(0, ${height})`)\r\n      .call(d3.axisBottom(xScale));\r\n\r\n    chart.append('g')\r\n      .call(d3.axisLeft(yScale));\r\n\r\n    // vertical grid lines\r\n    chart.append('g')\r\n      .attr('class', 'grid')\r\n      .attr('transform', `translate(0, ${height})`)\r\n      .call(makeXLines()\r\n        .tickSize(-height, 0, 0)\r\n        .tickFormat('')\r\n      )\r\n\r\n    chart.append('g')\r\n      .attr('class', 'grid')\r\n      .call(makeYLines()\r\n        .tickSize(-width, 0, 0)\r\n        .tickFormat('')\r\n      )\r\n\r\n    const barGroups = chart.selectAll()\r\n      .data(sample)\r\n      .enter()\r\n      .append('g')\r\n\r\n    barGroups\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', (g) => xScale(g.language))\r\n      .attr('y', (g) => yScale(g.value))\r\n      .attr('height', (g) => height - yScale(g.value))\r\n      .attr('width', xScale.bandwidth())\r\n\r\n    barGroups \r\n      .append('text')\r\n      .attr('class', 'value')\r\n      .attr('x', (a) => xScale(a.language) + xScale.bandwidth() / 2)\r\n      .attr('y', (a) => yScale(a.value) + 30)\r\n      .attr('text-anchor', 'middle')\r\n      .text((a) => `${a.value}%`)\r\n    \r\n    svg\r\n      .append('text')\r\n      .attr('class', 'label')\r\n      .attr('x', -(height / 2) - margin)\r\n      .attr('y', margin / 2.4)\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('text-anchor', 'middle')\r\n      .text('Love meter (%)')\r\n\r\n    svg.append('text')\r\n      .attr('class', 'label')\r\n      .attr('x', width / 2 + margin)\r\n      .attr('y', height + margin * 1.7)\r\n      .attr('text-anchor', 'middle')\r\n      .text('Languages')\r\n\r\n    svg.append('text')\r\n      .attr('class', 'title')\r\n      .attr('x', width / 2 + margin)\r\n      .attr('y', 40)\r\n      .attr('text-anchor', 'middle')\r\n      .text('Most loved programming languages all over the world')\r\n\r\n    svg.append('text')\r\n      .attr('class', 'source')\r\n      .attr('x', width - margin / 2)\r\n      .attr('y', height + margin * 1.7)\r\n      .attr('text-anchor', 'start')\r\n      .text('Note: These are all the randomly created data')\r\n  \r\n    \r\n    \r\n    \r\n  }\r\n        \r\n  render(){\r\n    return <div id='layout'>\r\n    {/*  <h2>Bar chart </h2> */}\r\n    <div id='container'>\r\n      <svg viewBox='0 0 750 500'/>\r\n    </div>\r\n  </div>\r\n  }\r\n}    \r\n\r\nexport default Dashboard;","C:\\Users\\vikas\\Desktop\\react.js\\bar_chart_with_signup\\src\\Form.js",[],[],"C:\\Users\\vikas\\Desktop\\react.js\\bar_chart_with_signup\\src\\BackgroundImage.js",[],[],{"ruleId":"34","severity":1,"message":"35","line":64,"column":11,"nodeType":"36","messageId":"37","endLine":64,"endColumn":23},"no-unused-vars","'svgContainer' is assigned a value but never used.","Identifier","unusedVar"]